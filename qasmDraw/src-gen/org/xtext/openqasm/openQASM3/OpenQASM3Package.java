/**
 * generated by Xtext 2.30.0
 */
package org.xtext.openqasm.openQASM3;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.openqasm.openQASM3.OpenQASM3Factory
 * @model kind="package"
 * @generated
 */
public interface OpenQASM3Package extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "openQASM3";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/openqasm/OpenQASM3";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "openQASM3";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  OpenQASM3Package eINSTANCE = org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.ProgramImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Version</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__VERSION = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__STATEMENTS = 1;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.VersionImpl <em>Version</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.VersionImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getVersion()
   * @generated
   */
  int VERSION = 1;

  /**
   * The feature id for the '<em><b>Version Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERSION__VERSION_NUMBER = 0;

  /**
   * The number of structural features of the '<em>Version</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.statementOrScopeImpl <em>statement Or Scope</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.statementOrScopeImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getstatementOrScope()
   * @generated
   */
  int STATEMENT_OR_SCOPE = 6;

  /**
   * The number of structural features of the '<em>statement Or Scope</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_OR_SCOPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.StatementImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 2;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = STATEMENT_OR_SCOPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.quantumDeclarationStatementImpl <em>quantum Declaration Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.quantumDeclarationStatementImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getquantumDeclarationStatement()
   * @generated
   */
  int QUANTUM_DECLARATION_STATEMENT = 3;

  /**
   * The number of structural features of the '<em>quantum Declaration Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUANTUM_DECLARATION_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.GateCallStatementImpl <em>Gate Call Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.GateCallStatementImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateCallStatement()
   * @generated
   */
  int GATE_CALL_STATEMENT = 4;

  /**
   * The feature id for the '<em><b>Gate</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_CALL_STATEMENT__GATE = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>El</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_CALL_STATEMENT__EL = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Gate List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_CALL_STATEMENT__GATE_LIST = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Scope</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_CALL_STATEMENT__SCOPE = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Gate Call Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_CALL_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.IfStatementImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 5;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>If body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__IF_BODY = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.ScopeImpl <em>Scope</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.ScopeImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getScope()
   * @generated
   */
  int SCOPE = 7;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCOPE__STATEMENTS = STATEMENT_OR_SCOPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Scope</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCOPE_FEATURE_COUNT = STATEMENT_OR_SCOPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.ExpressionListImpl <em>Expression List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.ExpressionListImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getExpressionList()
   * @generated
   */
  int EXPRESSION_LIST = 8;

  /**
   * The feature id for the '<em><b>E1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST__E1 = 0;

  /**
   * The feature id for the '<em><b>E2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST__E2 = 1;

  /**
   * The number of structural features of the '<em>Expression List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.IndexOperatorImpl <em>Index Operator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.IndexOperatorImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIndexOperator()
   * @generated
   */
  int INDEX_OPERATOR = 13;

  /**
   * The number of structural features of the '<em>Index Operator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_OPERATOR_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.ExpressionImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Exprs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRS = INDEX_OPERATOR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Ltrs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LTRS = INDEX_OPERATOR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Un Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__UN_EXPRESSIONS = INDEX_OPERATOR_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Mult Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__MULT_EXPRESSIONS = INDEX_OPERATOR_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__E = INDEX_OPERATOR_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = INDEX_OPERATOR_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.LiteralImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 10;

  /**
   * The feature id for the '<em><b>L</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__L = 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.MultiplicativeExpressionImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getMultiplicativeExpression()
   * @generated
   */
  int MULTIPLICATIVE_EXPRESSION = 11;

  /**
   * The feature id for the '<em><b>L1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION__L1 = 0;

  /**
   * The number of structural features of the '<em>Multiplicative Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.UnaryExpressionImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 12;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OP = 0;

  /**
   * The feature id for the '<em><b>L</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__L = 1;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.GateOperandListImpl <em>Gate Operand List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.GateOperandListImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateOperandList()
   * @generated
   */
  int GATE_OPERAND_LIST = 16;

  /**
   * The number of structural features of the '<em>Gate Operand List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_OPERAND_LIST_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.GateOperandImpl <em>Gate Operand</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.GateOperandImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateOperand()
   * @generated
   */
  int GATE_OPERAND = 15;

  /**
   * The feature id for the '<em><b>Extra GO</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_OPERAND__EXTRA_GO = GATE_OPERAND_LIST_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Gate Operand</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GATE_OPERAND_FEATURE_COUNT = GATE_OPERAND_LIST_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.IndexedIdentifierImpl <em>Indexed Identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.IndexedIdentifierImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIndexedIdentifier()
   * @generated
   */
  int INDEXED_IDENTIFIER = 14;

  /**
   * The feature id for the '<em><b>Extra GO</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEXED_IDENTIFIER__EXTRA_GO = GATE_OPERAND__EXTRA_GO;

  /**
   * The feature id for the '<em><b>Gate Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEXED_IDENTIFIER__GATE_NAME = GATE_OPERAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Io</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEXED_IDENTIFIER__IO = GATE_OPERAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Indexed Identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEXED_IDENTIFIER_FEATURE_COUNT = GATE_OPERAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.QubitTypeImpl <em>Qubit Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.QubitTypeImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getQubitType()
   * @generated
   */
  int QUBIT_TYPE = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUBIT_TYPE__NAME = QUANTUM_DECLARATION_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>D</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUBIT_TYPE__D = QUANTUM_DECLARATION_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Qubit Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUBIT_TYPE_FEATURE_COUNT = QUANTUM_DECLARATION_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.DesignatorImpl <em>Designator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.DesignatorImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getDesignator()
   * @generated
   */
  int DESIGNATOR = 18;

  /**
   * The feature id for the '<em><b>E</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESIGNATOR__E = 0;

  /**
   * The number of structural features of the '<em>Designator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DESIGNATOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.openqasm.openQASM3.impl.IncludeStatementImpl <em>Include Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.openqasm.openQASM3.impl.IncludeStatementImpl
   * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIncludeStatement()
   * @generated
   */
  int INCLUDE_STATEMENT = 19;

  /**
   * The feature id for the '<em><b>Lib Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE_STATEMENT__LIB_NAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Include Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.openqasm.openQASM3.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.Program#getVersion <em>Version</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Version</em>'.
   * @see org.xtext.openqasm.openQASM3.Program#getVersion()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Version();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Program#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.openqasm.openQASM3.Program#getStatements()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Statements();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Version <em>Version</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Version</em>'.
   * @see org.xtext.openqasm.openQASM3.Version
   * @generated
   */
  EClass getVersion();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.Version#getVersionNumber <em>Version Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Version Number</em>'.
   * @see org.xtext.openqasm.openQASM3.Version#getVersionNumber()
   * @see #getVersion()
   * @generated
   */
  EAttribute getVersion_VersionNumber();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see org.xtext.openqasm.openQASM3.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.quantumDeclarationStatement <em>quantum Declaration Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>quantum Declaration Statement</em>'.
   * @see org.xtext.openqasm.openQASM3.quantumDeclarationStatement
   * @generated
   */
  EClass getquantumDeclarationStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.GateCallStatement <em>Gate Call Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Gate Call Statement</em>'.
   * @see org.xtext.openqasm.openQASM3.GateCallStatement
   * @generated
   */
  EClass getGateCallStatement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.GateCallStatement#getGate <em>Gate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Gate</em>'.
   * @see org.xtext.openqasm.openQASM3.GateCallStatement#getGate()
   * @see #getGateCallStatement()
   * @generated
   */
  EAttribute getGateCallStatement_Gate();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.GateCallStatement#getEl <em>El</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>El</em>'.
   * @see org.xtext.openqasm.openQASM3.GateCallStatement#getEl()
   * @see #getGateCallStatement()
   * @generated
   */
  EReference getGateCallStatement_El();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.GateCallStatement#getGateList <em>Gate List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Gate List</em>'.
   * @see org.xtext.openqasm.openQASM3.GateCallStatement#getGateList()
   * @see #getGateCallStatement()
   * @generated
   */
  EReference getGateCallStatement_GateList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.GateCallStatement#getScope <em>Scope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Scope</em>'.
   * @see org.xtext.openqasm.openQASM3.GateCallStatement#getScope()
   * @see #getGateCallStatement()
   * @generated
   */
  EReference getGateCallStatement_Scope();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see org.xtext.openqasm.openQASM3.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.IfStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see org.xtext.openqasm.openQASM3.IfStatement#getCondition()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.IfStatement#getIf_body <em>If body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If body</em>'.
   * @see org.xtext.openqasm.openQASM3.IfStatement#getIf_body()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_If_body();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.statementOrScope <em>statement Or Scope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement Or Scope</em>'.
   * @see org.xtext.openqasm.openQASM3.statementOrScope
   * @generated
   */
  EClass getstatementOrScope();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Scope <em>Scope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Scope</em>'.
   * @see org.xtext.openqasm.openQASM3.Scope
   * @generated
   */
  EClass getScope();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Scope#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.openqasm.openQASM3.Scope#getStatements()
   * @see #getScope()
   * @generated
   */
  EReference getScope_Statements();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.ExpressionList <em>Expression List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression List</em>'.
   * @see org.xtext.openqasm.openQASM3.ExpressionList
   * @generated
   */
  EClass getExpressionList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.ExpressionList#getE1 <em>E1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E1</em>'.
   * @see org.xtext.openqasm.openQASM3.ExpressionList#getE1()
   * @see #getExpressionList()
   * @generated
   */
  EReference getExpressionList_E1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.ExpressionList#getE2 <em>E2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>E2</em>'.
   * @see org.xtext.openqasm.openQASM3.ExpressionList#getE2()
   * @see #getExpressionList()
   * @generated
   */
  EReference getExpressionList_E2();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Expression#getExprs <em>Exprs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exprs</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression#getExprs()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Exprs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Expression#getLtrs <em>Ltrs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ltrs</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression#getLtrs()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Ltrs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Expression#getUnExpressions <em>Un Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Un Expressions</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression#getUnExpressions()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_UnExpressions();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Expression#getMultExpressions <em>Mult Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mult Expressions</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression#getMultExpressions()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_MultExpressions();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.Expression#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>E</em>'.
   * @see org.xtext.openqasm.openQASM3.Expression#getE()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_E();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see org.xtext.openqasm.openQASM3.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.Literal#getL <em>L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>L</em>'.
   * @see org.xtext.openqasm.openQASM3.Literal#getL()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_L();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.MultiplicativeExpression <em>Multiplicative Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicative Expression</em>'.
   * @see org.xtext.openqasm.openQASM3.MultiplicativeExpression
   * @generated
   */
  EClass getMultiplicativeExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.MultiplicativeExpression#getL1 <em>L1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>L1</em>'.
   * @see org.xtext.openqasm.openQASM3.MultiplicativeExpression#getL1()
   * @see #getMultiplicativeExpression()
   * @generated
   */
  EReference getMultiplicativeExpression_L1();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see org.xtext.openqasm.openQASM3.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.UnaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.openqasm.openQASM3.UnaryExpression#getOp()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.UnaryExpression#getL <em>L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L</em>'.
   * @see org.xtext.openqasm.openQASM3.UnaryExpression#getL()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_L();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.IndexOperator <em>Index Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Operator</em>'.
   * @see org.xtext.openqasm.openQASM3.IndexOperator
   * @generated
   */
  EClass getIndexOperator();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.IndexedIdentifier <em>Indexed Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Indexed Identifier</em>'.
   * @see org.xtext.openqasm.openQASM3.IndexedIdentifier
   * @generated
   */
  EClass getIndexedIdentifier();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.IndexedIdentifier#getGateName <em>Gate Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Gate Name</em>'.
   * @see org.xtext.openqasm.openQASM3.IndexedIdentifier#getGateName()
   * @see #getIndexedIdentifier()
   * @generated
   */
  EAttribute getIndexedIdentifier_GateName();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.IndexedIdentifier#getIo <em>Io</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Io</em>'.
   * @see org.xtext.openqasm.openQASM3.IndexedIdentifier#getIo()
   * @see #getIndexedIdentifier()
   * @generated
   */
  EReference getIndexedIdentifier_Io();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.GateOperand <em>Gate Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Gate Operand</em>'.
   * @see org.xtext.openqasm.openQASM3.GateOperand
   * @generated
   */
  EClass getGateOperand();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.openqasm.openQASM3.GateOperand#getExtraGO <em>Extra GO</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Extra GO</em>'.
   * @see org.xtext.openqasm.openQASM3.GateOperand#getExtraGO()
   * @see #getGateOperand()
   * @generated
   */
  EReference getGateOperand_ExtraGO();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.GateOperandList <em>Gate Operand List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Gate Operand List</em>'.
   * @see org.xtext.openqasm.openQASM3.GateOperandList
   * @generated
   */
  EClass getGateOperandList();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.QubitType <em>Qubit Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Qubit Type</em>'.
   * @see org.xtext.openqasm.openQASM3.QubitType
   * @generated
   */
  EClass getQubitType();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.QubitType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.openqasm.openQASM3.QubitType#getName()
   * @see #getQubitType()
   * @generated
   */
  EAttribute getQubitType_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.QubitType#getD <em>D</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>D</em>'.
   * @see org.xtext.openqasm.openQASM3.QubitType#getD()
   * @see #getQubitType()
   * @generated
   */
  EReference getQubitType_D();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.Designator <em>Designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Designator</em>'.
   * @see org.xtext.openqasm.openQASM3.Designator
   * @generated
   */
  EClass getDesignator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.openqasm.openQASM3.Designator#getE <em>E</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>E</em>'.
   * @see org.xtext.openqasm.openQASM3.Designator#getE()
   * @see #getDesignator()
   * @generated
   */
  EReference getDesignator_E();

  /**
   * Returns the meta object for class '{@link org.xtext.openqasm.openQASM3.IncludeStatement <em>Include Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Include Statement</em>'.
   * @see org.xtext.openqasm.openQASM3.IncludeStatement
   * @generated
   */
  EClass getIncludeStatement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.openqasm.openQASM3.IncludeStatement#getLibName <em>Lib Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lib Name</em>'.
   * @see org.xtext.openqasm.openQASM3.IncludeStatement#getLibName()
   * @see #getIncludeStatement()
   * @generated
   */
  EAttribute getIncludeStatement_LibName();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  OpenQASM3Factory getOpenQASM3Factory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.ProgramImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Version</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__VERSION = eINSTANCE.getProgram_Version();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__STATEMENTS = eINSTANCE.getProgram_Statements();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.VersionImpl <em>Version</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.VersionImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getVersion()
     * @generated
     */
    EClass VERSION = eINSTANCE.getVersion();

    /**
     * The meta object literal for the '<em><b>Version Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VERSION__VERSION_NUMBER = eINSTANCE.getVersion_VersionNumber();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.StatementImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.quantumDeclarationStatementImpl <em>quantum Declaration Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.quantumDeclarationStatementImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getquantumDeclarationStatement()
     * @generated
     */
    EClass QUANTUM_DECLARATION_STATEMENT = eINSTANCE.getquantumDeclarationStatement();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.GateCallStatementImpl <em>Gate Call Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.GateCallStatementImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateCallStatement()
     * @generated
     */
    EClass GATE_CALL_STATEMENT = eINSTANCE.getGateCallStatement();

    /**
     * The meta object literal for the '<em><b>Gate</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GATE_CALL_STATEMENT__GATE = eINSTANCE.getGateCallStatement_Gate();

    /**
     * The meta object literal for the '<em><b>El</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GATE_CALL_STATEMENT__EL = eINSTANCE.getGateCallStatement_El();

    /**
     * The meta object literal for the '<em><b>Gate List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GATE_CALL_STATEMENT__GATE_LIST = eINSTANCE.getGateCallStatement_GateList();

    /**
     * The meta object literal for the '<em><b>Scope</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GATE_CALL_STATEMENT__SCOPE = eINSTANCE.getGateCallStatement_Scope();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.IfStatementImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__CONDITION = eINSTANCE.getIfStatement_Condition();

    /**
     * The meta object literal for the '<em><b>If body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__IF_BODY = eINSTANCE.getIfStatement_If_body();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.statementOrScopeImpl <em>statement Or Scope</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.statementOrScopeImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getstatementOrScope()
     * @generated
     */
    EClass STATEMENT_OR_SCOPE = eINSTANCE.getstatementOrScope();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.ScopeImpl <em>Scope</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.ScopeImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getScope()
     * @generated
     */
    EClass SCOPE = eINSTANCE.getScope();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SCOPE__STATEMENTS = eINSTANCE.getScope_Statements();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.ExpressionListImpl <em>Expression List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.ExpressionListImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getExpressionList()
     * @generated
     */
    EClass EXPRESSION_LIST = eINSTANCE.getExpressionList();

    /**
     * The meta object literal for the '<em><b>E1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LIST__E1 = eINSTANCE.getExpressionList_E1();

    /**
     * The meta object literal for the '<em><b>E2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LIST__E2 = eINSTANCE.getExpressionList_E2();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.ExpressionImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Exprs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPRS = eINSTANCE.getExpression_Exprs();

    /**
     * The meta object literal for the '<em><b>Ltrs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LTRS = eINSTANCE.getExpression_Ltrs();

    /**
     * The meta object literal for the '<em><b>Un Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__UN_EXPRESSIONS = eINSTANCE.getExpression_UnExpressions();

    /**
     * The meta object literal for the '<em><b>Mult Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__MULT_EXPRESSIONS = eINSTANCE.getExpression_MultExpressions();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__E = eINSTANCE.getExpression_E();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.LiteralImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>L</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__L = eINSTANCE.getLiteral_L();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.MultiplicativeExpressionImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getMultiplicativeExpression()
     * @generated
     */
    EClass MULTIPLICATIVE_EXPRESSION = eINSTANCE.getMultiplicativeExpression();

    /**
     * The meta object literal for the '<em><b>L1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION__L1 = eINSTANCE.getMultiplicativeExpression_L1();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.UnaryExpressionImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__OP = eINSTANCE.getUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>L</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__L = eINSTANCE.getUnaryExpression_L();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.IndexOperatorImpl <em>Index Operator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.IndexOperatorImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIndexOperator()
     * @generated
     */
    EClass INDEX_OPERATOR = eINSTANCE.getIndexOperator();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.IndexedIdentifierImpl <em>Indexed Identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.IndexedIdentifierImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIndexedIdentifier()
     * @generated
     */
    EClass INDEXED_IDENTIFIER = eINSTANCE.getIndexedIdentifier();

    /**
     * The meta object literal for the '<em><b>Gate Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEXED_IDENTIFIER__GATE_NAME = eINSTANCE.getIndexedIdentifier_GateName();

    /**
     * The meta object literal for the '<em><b>Io</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEXED_IDENTIFIER__IO = eINSTANCE.getIndexedIdentifier_Io();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.GateOperandImpl <em>Gate Operand</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.GateOperandImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateOperand()
     * @generated
     */
    EClass GATE_OPERAND = eINSTANCE.getGateOperand();

    /**
     * The meta object literal for the '<em><b>Extra GO</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GATE_OPERAND__EXTRA_GO = eINSTANCE.getGateOperand_ExtraGO();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.GateOperandListImpl <em>Gate Operand List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.GateOperandListImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getGateOperandList()
     * @generated
     */
    EClass GATE_OPERAND_LIST = eINSTANCE.getGateOperandList();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.QubitTypeImpl <em>Qubit Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.QubitTypeImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getQubitType()
     * @generated
     */
    EClass QUBIT_TYPE = eINSTANCE.getQubitType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUBIT_TYPE__NAME = eINSTANCE.getQubitType_Name();

    /**
     * The meta object literal for the '<em><b>D</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUBIT_TYPE__D = eINSTANCE.getQubitType_D();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.DesignatorImpl <em>Designator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.DesignatorImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getDesignator()
     * @generated
     */
    EClass DESIGNATOR = eINSTANCE.getDesignator();

    /**
     * The meta object literal for the '<em><b>E</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DESIGNATOR__E = eINSTANCE.getDesignator_E();

    /**
     * The meta object literal for the '{@link org.xtext.openqasm.openQASM3.impl.IncludeStatementImpl <em>Include Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.openqasm.openQASM3.impl.IncludeStatementImpl
     * @see org.xtext.openqasm.openQASM3.impl.OpenQASM3PackageImpl#getIncludeStatement()
     * @generated
     */
    EClass INCLUDE_STATEMENT = eINSTANCE.getIncludeStatement();

    /**
     * The meta object literal for the '<em><b>Lib Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INCLUDE_STATEMENT__LIB_NAME = eINSTANCE.getIncludeStatement_LibName();

  }

} //OpenQASM3Package
